!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("@angular/core"),require("rxjs/Observable"),require("rxjs/ReplaySubject"),require("rxjs/add/operator/map"),require("rxjs/add/operator/mergeMap"),require("rxjs/add/operator/pluck"),require("rxjs/add/operator/first"),require("rxjs/add/observable/fromEvent"),require("rxjs/add/observable/merge"),require("rxjs/add/observable/throw"),require("rxjs/add/observable/of")):"function"==typeof define&&define.amd?define(["exports","@angular/core","rxjs/Observable","rxjs/ReplaySubject","rxjs/add/operator/map","rxjs/add/operator/mergeMap","rxjs/add/operator/pluck","rxjs/add/operator/first","rxjs/add/observable/fromEvent","rxjs/add/observable/merge","rxjs/add/observable/throw","rxjs/add/observable/of"],r):r((e.ng=e.ng||{},e.ng.asyncLocalStorage=e.ng.asyncLocalStorage||{}),e.ng.core,e.Rx,e.Rx,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.Rx.Observable.prototype,e.Rx.Observable,e.Rx.Observable,e.Rx.Observable,e.Rx.Observable)}(this,function(e,r,t,a,o,s,n,b,u,c,i,l){"use strict";var d=function(){function e(){var e=this;this.dbName="ngStorage",this.objectStoreName="localStorage",this.keyPath="key",this.dataPath="value",this.database=new a.ReplaySubject;var r=indexedDB.open(this.dbName);t.Observable.fromEvent(r,"upgradeneeded").first().subscribe(function(r){console.log("test");var t=r.target.result;t.objectStoreNames.contains(e.objectStoreName)||t.createObjectStore(e.objectStoreName)});var o=t.Observable.fromEvent(r,"success");t.Observable.merge(o,this.toErrorObservable(r,"connection")).first().subscribe(function(r){e.database.next(r.target.result)})}return e.prototype.getItem=function(e){var r=this;return this.transaction().map(function(r){return r.get(e)}).mergeMap(function(e){var a=t.Observable.fromEvent(e,"success").pluck("target","result").map(function(e){return e?e[r.dataPath]:null});return t.Observable.merge(a,r.toErrorObservable(e,"getter")).first()})},e.prototype.setItem=function(e,r){var a=this;return this.getItem(e).map(function(e){return null==e?"add":"put"}).mergeMap(function(o){return a.transaction("readwrite").mergeMap(function(s){var n=s[o]((b={},b[a.dataPath]=r,b),e);return t.Observable.merge(a.toSuccessObservable(n),a.toErrorObservable(n,"setter")).first();var b})})},e.prototype.removeItem=function(e){var r=this;return this.getItem(e).mergeMap(function(a){return null!=a?r.transaction("readwrite").mergeMap(function(a){var o=a.delete(e);return t.Observable.merge(r.toSuccessObservable(o),r.toErrorObservable(o,"remover")).first()}):t.Observable.of(!0).first()})},e.prototype.clear=function(){var e=this;return this.transaction("readwrite").mergeMap(function(r){var a=r.clear();return t.Observable.merge(e.toSuccessObservable(a),e.toErrorObservable(a,"clearer")).first()})},e.prototype.transaction=function(e){var r=this;return void 0===e&&(e="readonly"),this.database.map(function(t){return t.transaction([r.objectStoreName],e).objectStore(r.objectStoreName)})},e.prototype.toSuccessObservable=function(e){return t.Observable.fromEvent(e,"success").map(function(){return!0})},e.prototype.toErrorObservable=function(e,r){return void 0===r&&(r=""),t.Observable.fromEvent(e,"error").mergeMap(function(){return t.Observable.throw(new Error("IndexedDB "+r+" issue."))})},e.decorators=[{type:r.Injectable}],e.ctorParameters=[],e}(),v=function(){function e(){}return e.decorators=[{type:r.NgModule,args:[{providers:[d]}]}],e.ctorParameters=[],e}();e.AsyncLocalStorageModule=v,e.AsyncLocalStorage=d,Object.defineProperty(e,"__esModule",{value:!0})});